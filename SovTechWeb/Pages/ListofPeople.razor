@page "/counter"
@using SovTechWeb.Service.Interface
@using SovTechWeb.Service.Response
@inject ISOvTechService  service


 <h3>List Of Swapi People</h3>



   
<style>
.product-title {
    min-height: 72px;
    background-color: var(--rz-secondary-lighter);
}
.price-badge {
    font-size: 16px;
    font-weight: bold;
    line-height: 20px;
    padding: 8px;
}
</style>

@if (People == null)
{
    <p><em>Loading...</em></p>
}
else
{
   
<table id="example" class="table table-striped table-bordered nowrap" style="width:100%">
        <thead>
            <tr>
               
                <td>Birth Year</td>
                <td>Name</td>
                <td>Height</td>
                <td>Gender</td>
                <td>Url</td>
                <td>Created Date</td>
                <td>Edited Date</td>
                <td>Eye Color</td>
                <td>Hair Color</td>
                <td>Home World</td>
                <td>Mass</td>
                <td>Skin Color</td>
            </tr>
        </thead>
        <tbody>
           @foreach (var item in People)
           {
            <tr>
                  <td>@item.BirthYear</td>
                  <td>@item.Name</td>
                  <td>@item.Height</td>
                  <td>@item.Gender</td>
                  <td>@item.Url</td>
                  <td>@item.Created</td>
                  <td>@item.Edited</td>
                  <td>@item.EyeColor</td>
                  <td>@item.HairColor</td>
                  <td>@item.Homeworld</td>
                  <td>@item.Mass</td>
                  <td>@item.SkinColor</td>
                  
            </tr>   
           }

        </tbody>
    </table>
}







@code {
    private string searchTerm;

    public List<PeopleResponseResult> PeopleResponse { get; set; } = new List<PeopleResponseResult>();
    public List<PeopleResponse> People = new List<PeopleResponse>();

    public SearchDetailResponse searchDetailResponse { get; set; } = new SearchDetailResponse();

    protected override async Task OnInitializedAsync()
    {
        People = await service.GetAllPeoples();
        
    }

    //protected async Task SearchIssues()
    //{
    //    searchDetailResponse =  await service.SearchByQuery(searchTerm);
    //}
       
}
